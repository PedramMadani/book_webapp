openapi: 3.0.0
info:
  title: Book Social Network API
  version: "1.0.0"
  description: API for a book social network, including user management, book reviews, social features, and notifications.
servers:
  - url: http://localhost:3000/api

paths:
  /auth/register:
    post:
      summary: Registers a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '200':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request due to invalid input

  /auth/login:
    post:
      summary: Logs in a user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
      responses:
        '200':
          description: Successfully logged in, returns a token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized due to invalid credentials

  /users/me:
    get:
      summary: Retrieves the profile of the current user
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile information for the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized if the user is not logged in

  /books:
    get:
      summary: Lists all books
      tags: [Books]
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Adds a new book
      tags: [Books]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBook'
      responses:
        '201':
          description: Book successfully created
        '400':
          description: Invalid book data

  /books/{bookId}:
    get:
      summary: Gets a single book by ID
      tags: [Books]
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of a specific book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found

components:
  schemas:
    NewUser:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        name:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
    LoginCredentials:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    Book:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        author:
          type: string
        summary:
          type: string
        genres:
          type: array
          items:
            type: string
    NewBook:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        summary:
          type: string
        genres:
          type: array
          items:
            type: string

securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
